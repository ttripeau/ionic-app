{"version":3,"file":"utils-json.js","sourceRoot":"","sources":["../../src/utils/utils-json.ts"],"names":[],"mappings":"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","sourcesContent":["import { JsonColumn, JsonIndex, JsonTrigger, JsonView } from '../interfaces/interfaces';\r\nimport { queryAll } from './utils-sqlite';\r\n\r\nexport const isJsonSQLite = async (obj: any): Promise<boolean> => {\r\n  const keyFirstLevel: string[] = [\r\n    'database',\r\n    'version',\r\n    'overwrite',\r\n    'encrypted',\r\n    'mode',\r\n    'tables',\r\n    'views'\r\n  ];\r\n  if (\r\n    obj == null ||\r\n    (Object.keys(obj).length === 0 && obj.constructor === Object)\r\n  )\r\n    return false;\r\n  for (const key of Object.keys(obj)) {\r\n    if (keyFirstLevel.indexOf(key) === -1) return false;\r\n    if (key === 'database' && typeof obj[key] != 'string') return false;\r\n    if (key === 'version' && typeof obj[key] != 'number') return false;\r\n    if (key === 'overwrite' && typeof obj[key] != 'boolean') return false;\r\n    if (key === 'encrypted' && typeof obj[key] != 'boolean') return false;\r\n    if (key === 'mode' && typeof obj[key] != 'string') return false;\r\n    if (key === 'tables' && typeof obj[key] != 'object') return false;\r\n    if (key === 'tables') {\r\n      for (const oKey of obj[key]) {\r\n        const retTable: boolean = await isTable(oKey);\r\n        if (!retTable) return false;\r\n      }\r\n    }\r\n    if (key === 'views' && typeof obj[key] != 'object') return false;\r\n    if (key === 'views') {\r\n      for (const oKey of obj[key]) {\r\n        const retView: boolean = await isView(oKey);\r\n        if (!retView) return false;\r\n      }\r\n    }\r\n\r\n  }\r\n  return true;\r\n}\r\nexport const isTable = async (obj: any): Promise<boolean> => {\r\n  const keyTableLevel: string[] = [\r\n    'name',\r\n    'schema',\r\n    'indexes',\r\n    'triggers',\r\n    'values',\r\n  ];\r\n  let nbColumn = 0;\r\n  if (\r\n    obj == null ||\r\n    (Object.keys(obj).length === 0 && obj.constructor === Object)\r\n  )\r\n    return false;\r\n  for (const key of Object.keys(obj)) {\r\n    if (keyTableLevel.indexOf(key) === -1) return false;\r\n    if (key === 'name' && typeof obj[key] != 'string') return false;\r\n    if (key === 'schema' && typeof obj[key] != 'object') return false;\r\n    if (key === 'indexes' && typeof obj[key] != 'object') return false;\r\n    if (key === 'triggers' && typeof obj[key] != 'object') return false;\r\n    if (key === 'values' && typeof obj[key] != 'object') return false;\r\n    if (key === 'schema') {\r\n      obj['schema'].forEach(\r\n        (element: {\r\n          column?: string;\r\n          value: string;\r\n          foreignkey?: string;\r\n          primarykey?: string;\r\n          constraint?: string;\r\n        }) => {\r\n          if (element.column) {\r\n            nbColumn++;\r\n          }\r\n        },\r\n      );\r\n      for (let i = 0; i < nbColumn; i++) {\r\n        const retSchema: boolean = await isSchema(obj[key][i]);\r\n        if (!retSchema) return false;\r\n      }\r\n    }\r\n    if (key === 'indexes') {\r\n      for (const oKey of obj[key]) {\r\n        const retIndexes: boolean = await isIndexes(oKey);\r\n        if (!retIndexes) return false;\r\n      }\r\n    }\r\n    if (key === 'triggers') {\r\n      for (const oKey of obj[key]) {\r\n        const retTriggers: boolean = await isTriggers(oKey);\r\n        if (!retTriggers) return false;\r\n      }\r\n    }\r\n    if (key === 'values') {\r\n      if (nbColumn > 0) {\r\n        for (const oKey of obj[key]) {\r\n          if (typeof oKey != 'object' || oKey.length != nbColumn)\r\n            return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\nexport const isSchema = async (obj: any): Promise<boolean> => {\r\n  const keySchemaLevel: string[] = [\r\n    'column',\r\n    'value',\r\n    'foreignkey',\r\n    'primarykey',\r\n    'constraint',\r\n  ];\r\n  if (\r\n    obj == null ||\r\n    (Object.keys(obj).length === 0 && obj.constructor === Object)\r\n  )\r\n    return false;\r\n  for (const key of Object.keys(obj)) {\r\n    if (keySchemaLevel.indexOf(key) === -1) return false;\r\n    if (key === 'column' && typeof obj[key] != 'string') return false;\r\n    if (key === 'value' && typeof obj[key] != 'string') return false;\r\n    if (key === 'foreignkey' && typeof obj[key] != 'string') return false;\r\n    if (key === 'primarykey' && typeof obj[key] != 'string') return false;\r\n    if (key === 'constraint' && typeof obj[key] != 'string') return false;\r\n  }\r\n  return true;\r\n}\r\nexport const isIndexes = async (obj: any): Promise<boolean> => {\r\n  const keyIndexesLevel: string[] = ['name', 'value', 'mode'];\r\n  if (\r\n    obj == null ||\r\n    (Object.keys(obj).length === 0 && obj.constructor === Object)\r\n  )\r\n    return false;\r\n  for (const key of Object.keys(obj)) {\r\n    if (keyIndexesLevel.indexOf(key) === -1) return false;\r\n    if (key === 'name' && typeof obj[key] != 'string') return false;\r\n    if (key === 'value' && typeof obj[key] != 'string') return false;\r\n    if (\r\n      key === 'mode' &&\r\n      (typeof obj[key] != 'string' || obj[key].toUpperCase() != 'UNIQUE')\r\n    )\r\n      return false;\r\n  }\r\n  return true;\r\n}\r\nexport const isTriggers = async (obj: any): Promise<boolean> => {\r\n  const keyTriggersLevel: string[] = [\r\n    'name',\r\n    'timeevent',\r\n    'condition',\r\n    'logic',\r\n  ];\r\n  if (\r\n    obj == null ||\r\n    (Object.keys(obj).length === 0 && obj.constructor === Object)\r\n  )\r\n    return false;\r\n  for (const key of Object.keys(obj)) {\r\n    if (keyTriggersLevel.indexOf(key) === -1) return false;\r\n    if (key === 'name' && typeof obj[key] != 'string') return false;\r\n    if (key === 'timeevent' && typeof obj[key] != 'string') return false;\r\n    if (key === 'condition' && typeof obj[key] != 'string') return false;\r\n    if (key === 'logic' && typeof obj[key] != 'string') return false;\r\n  }\r\n  return true;\r\n}\r\nexport const isView = async (obj: any): Promise<boolean> => {\r\n  const keyViewLevel: string[] = ['name', 'value'];\r\n  if (\r\n    obj == null ||\r\n    (Object.keys(obj).length === 0 && obj.constructor === Object)\r\n  )\r\n    return false;\r\n  for (const key of Object.keys(obj)) {\r\n    if (keyViewLevel.indexOf(key) === -1) return false;\r\n    if (key === 'name' && typeof obj[key] != 'string') return false;\r\n    if (key === 'value' && typeof obj[key] != 'string') return false;\r\n  }\r\n  return true;\r\n}\r\nexport const checkSchemaValidity = async (schema: JsonColumn[]): Promise<void> => {\r\n  for (let i = 0; i < schema.length; i++) {\r\n    const sch: JsonColumn = {} as JsonColumn;\r\n    const keys: string[] = Object.keys(schema[i]);\r\n    if (keys.includes('column')) {\r\n      sch.column = schema[i].column;\r\n    }\r\n    if (keys.includes('value')) {\r\n      sch.value = schema[i].value;\r\n    }\r\n    if (keys.includes('foreignkey')) {\r\n      sch.foreignkey = schema[i].foreignkey;\r\n    }\r\n    if (keys.includes('constraint')) {\r\n      sch.constraint = schema[i].constraint;\r\n    }\r\n    const isValid: boolean = await isSchema(sch);\r\n    if (!isValid) {\r\n      return Promise.reject(\r\n        new Error(`CheckSchemaValidity: schema[${i}] not valid`),\r\n      );\r\n    }\r\n  }\r\n  return Promise.resolve();\r\n}\r\n\r\nexport const checkIndexesValidity = async (indexes: JsonIndex[]): Promise<void> => {\r\n  for (let i = 0; i < indexes.length; i++) {\r\n    const index: JsonIndex = {} as JsonIndex;\r\n    const keys: string[] = Object.keys(indexes[i]);\r\n    if (keys.includes('value')) {\r\n      index.value = indexes[i].value;\r\n    }\r\n    if (keys.includes('name')) {\r\n      index.name = indexes[i].name;\r\n    }\r\n    if (keys.includes('mode')) {\r\n      index.mode = indexes[i].mode;\r\n    }\r\n\r\n    const isValid: boolean = await isIndexes(index);\r\n    if (!isValid) {\r\n      return Promise.reject(\r\n        new Error(`CheckIndexesValidity: indexes[${i}] not valid`),\r\n      );\r\n    }\r\n  }\r\n  return Promise.resolve();\r\n}\r\nexport const checkTriggersValidity = async (triggers: JsonTrigger[]): Promise<void> => {\r\n  for (let i = 0; i < triggers.length; i++) {\r\n    const trigger: JsonTrigger = {} as JsonTrigger;\r\n    const keys: string[] = Object.keys(triggers[i]);\r\n    if (keys.includes('logic')) {\r\n      trigger.logic = triggers[i].logic;\r\n    }\r\n    if (keys.includes('name')) {\r\n      trigger.name = triggers[i].name;\r\n    }\r\n    if (keys.includes('timeevent')) {\r\n      trigger.timeevent = triggers[i].timeevent;\r\n    }\r\n    if (keys.includes('condition')) {\r\n      trigger.condition = triggers[i].condition;\r\n    }\r\n\r\n    const isValid: boolean = await isTriggers(trigger);\r\n    if (!isValid) {\r\n      return Promise.reject(\r\n        new Error(`CheckTriggersValidity: triggers[${i}] not valid`),\r\n      );\r\n    }\r\n  }\r\n  return Promise.resolve();\r\n}\r\nexport const checkViewsValidity = async (views: JsonView[]): Promise<void> => {\r\n  for (let i = 0; i < views.length; i++) {\r\n    const view: JsonView = {} as JsonView;\r\n    const keys: string[] = Object.keys(views[i]);\r\n    if (keys.includes('value')) {\r\n      view.value = views[i].value;\r\n    }\r\n    if (keys.includes('name')) {\r\n      view.name = views[i].name;\r\n    }\r\n\r\n    const isValid: boolean = await isView(view);\r\n    if (!isValid) {\r\n      return Promise.reject(\r\n        new Error(`CheckViewsValidity: views[${i}] not valid`),\r\n      );\r\n    }\r\n  }\r\n  return Promise.resolve();\r\n}\r\nexport const getTableColumnNamesTypes = async (db: any, tableName: string): Promise<any> => {\r\n  let resQuery: any[] = [];\r\n  const retNames: string[] = [];\r\n  const retTypes: string[] = [];\r\n  const query = `PRAGMA table_info('${tableName}');`;\r\n  try {\r\n    resQuery = await queryAll(db, query, []);\r\n    if (resQuery.length > 0) {\r\n      for (const query of resQuery) {\r\n        retNames.push(query.name);\r\n        retTypes.push(query.type);\r\n      }\r\n    }\r\n    return Promise.resolve({ names: retNames, types: retTypes });\r\n  } catch (err) {\r\n    return Promise.reject(\r\n      new Error('GetTableColumnNamesTypes: ' + `${err.message}`),\r\n    );\r\n  }\r\n}\r\nexport const getValues = async (db: any, query: string, tableName: string): Promise<any[]> => {\r\n  const values: any[] = [];\r\n  try {\r\n    // get table column names and types\r\n    const tableNamesTypes = await getTableColumnNamesTypes(db, tableName);\r\n    let rowNames: string[] = [];\r\n    if (Object.keys(tableNamesTypes).includes('names')) {\r\n      rowNames = tableNamesTypes.names;\r\n    } else {\r\n      return Promise.reject(\r\n        new Error(`GetValues: Table ${tableName} no names`),\r\n      );\r\n    }\r\n    const retValues = await queryAll(db, query, []);\r\n    for (const rValue of retValues) {\r\n      const row: any[] = [];\r\n      for (const rName of rowNames) {\r\n        if (Object.keys(rValue).includes(rName)) {\r\n          row.push(rValue[rName]);\r\n        } else {\r\n          row.push(null);\r\n        }\r\n      }\r\n      values.push(row);\r\n    }\r\n    return Promise.resolve(values);\r\n  } catch (err) {\r\n    return Promise.reject(new Error(`GetValues: ${err.message}`));\r\n  }\r\n}\r\n\r\n\r\n"]}