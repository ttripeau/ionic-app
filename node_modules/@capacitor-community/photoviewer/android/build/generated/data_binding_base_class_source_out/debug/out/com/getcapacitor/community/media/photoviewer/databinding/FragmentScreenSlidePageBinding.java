// Generated by data binding compiler. Do not edit!
package com.getcapacitor.community.media.photoviewer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.getcapacitor.community.media.photoviewer.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentScreenSlidePageBinding extends ViewDataBinding {
  @NonNull
  public final ImageButton closeBtn;

  @NonNull
  public final ImageView ivFullscreenImage;

  @NonNull
  public final RelativeLayout menuBtns;

  @NonNull
  public final RelativeLayout rlFullscreenImage;

  @NonNull
  public final ImageButton shareBtn;

  @NonNull
  public final TextView tvGalleryTitle;

  protected FragmentScreenSlidePageBinding(Object _bindingComponent, View _root,
      int _localFieldCount, ImageButton closeBtn, ImageView ivFullscreenImage,
      RelativeLayout menuBtns, RelativeLayout rlFullscreenImage, ImageButton shareBtn,
      TextView tvGalleryTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.closeBtn = closeBtn;
    this.ivFullscreenImage = ivFullscreenImage;
    this.menuBtns = menuBtns;
    this.rlFullscreenImage = rlFullscreenImage;
    this.shareBtn = shareBtn;
    this.tvGalleryTitle = tvGalleryTitle;
  }

  @NonNull
  public static FragmentScreenSlidePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_screen_slide_page, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentScreenSlidePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentScreenSlidePageBinding>inflateInternal(inflater, R.layout.fragment_screen_slide_page, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentScreenSlidePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_screen_slide_page, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentScreenSlidePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentScreenSlidePageBinding>inflateInternal(inflater, R.layout.fragment_screen_slide_page, null, false, component);
  }

  public static FragmentScreenSlidePageBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentScreenSlidePageBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentScreenSlidePageBinding)bind(component, view, R.layout.fragment_screen_slide_page);
  }
}
