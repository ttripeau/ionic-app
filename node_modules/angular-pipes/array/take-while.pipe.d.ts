import { PipeTransform } from '@angular/core';
import { CollectionPredicate } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
export declare class TakeWhilePipe implements PipeTransform {
    transform(input: any, predicate?: CollectionPredicate): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TakeWhilePipe, never>;
    static ɵpipe: ɵngcc0.ɵɵPipeDeclaration<TakeWhilePipe, "takeWhile", false>;
}
export declare class NgTakeWhilePipeModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgTakeWhilePipeModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<NgTakeWhilePipeModule, [typeof TakeWhilePipe], never, [typeof TakeWhilePipe]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<NgTakeWhilePipeModule>;
}

//# sourceMappingURL=take-while.pipe.d.ts.map