import { h, Host } from '@stencil/core';
export class JeepPhotoShare {
  constructor() {
    this.surl = null;
    this.stitle = null;
    this.stext = null;
    this.innerUrl = undefined;
    this.innerTitle = undefined;
    this.innerText = undefined;
  }
  //*****************************
  //* Watch on Property Changes *
  //*****************************
  parseUrl(newValue) {
    this.innerUrl = newValue;
  }
  parseTitle(newValue) {
    this.innerTitle = newValue;
  }
  parseText(newValue) {
    this.innerText = newValue;
  }
  //**********************
  //* Method Definitions *
  //**********************
  /**
   * Method initialize
   */
  async init() {
    return await this._init();
  }
  /**
   * Set the Share.
   */
  setShare() {
    return Promise.resolve(this._setShare());
  }
  //*******************************
  //* Component Lifecycle Methods *
  //*******************************
  async componentWillLoad() {
    this._window = window;
    await this.init();
  }
  async componentDidLoad() {
    await this.setShare();
  }
  //******************************
  //* Private Method Definitions *
  //******************************
  async _init() {
    this._element = this.el.shadowRoot;
    this.parseUrl(this.surl ? this.surl : null);
    this.parseTitle(this.stitle ? this.stitle : null);
    this.parseText(this.stext ? this.stext : null);
    return;
  }
  async _setShare() {
    if (navigator.share) {
      navigator.share({
        title: this.innerTitle,
        url: this.innerUrl,
        text: this.innerText
      })
        .then(() => {
        this.onPhotoShareCompleted.emit({ result: true });
      })
        .catch((error) => {
        this.onPhotoShareCompleted.emit({ result: false, message: error });
      });
    }
    else {
      const msg = "Share not implemented on this browser";
      this.onPhotoShareCompleted.emit({ result: false, message: msg });
    }
  }
  //*************************
  //* Rendering JSX Element *
  //*************************
  render() {
    return (h(Host, null));
  }
  static get is() { return "jeep-photo-share"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["jeep-photo-share.css"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["jeep-photo-share.css"]
    };
  }
  static get properties() {
    return {
      "surl": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The photo url to share"
        },
        "attribute": "surl",
        "reflect": true,
        "defaultValue": "null"
      },
      "stitle": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The photo title to share"
        },
        "attribute": "stitle",
        "reflect": true,
        "defaultValue": "null"
      },
      "stext": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The text to share"
        },
        "attribute": "stext",
        "reflect": true,
        "defaultValue": "null"
      }
    };
  }
  static get states() {
    return {
      "innerUrl": {},
      "innerTitle": {},
      "innerText": {}
    };
  }
  static get events() {
    return [{
        "method": "onPhotoShareCompleted",
        "name": "jeepPhotoShareCompleted",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": "Emitted when the close button was clicked"
        },
        "complexType": {
          "original": "JeepPhotoViewerResult",
          "resolved": "JeepPhotoViewerResult",
          "references": {
            "JeepPhotoViewerResult": {
              "location": "import",
              "path": "../../../interfaces/interfaces"
            }
          }
        }
      }];
  }
  static get methods() {
    return {
      "init": {
        "complexType": {
          "signature": "() => Promise<void>",
          "parameters": [],
          "references": {
            "Promise": {
              "location": "global"
            }
          },
          "return": "Promise<void>"
        },
        "docs": {
          "text": "Method initialize",
          "tags": []
        }
      },
      "setShare": {
        "complexType": {
          "signature": "() => Promise<void>",
          "parameters": [],
          "references": {
            "Promise": {
              "location": "global"
            }
          },
          "return": "Promise<void>"
        },
        "docs": {
          "text": "Set the Share.",
          "tags": []
        }
      }
    };
  }
  static get elementRef() { return "el"; }
  static get watchers() {
    return [{
        "propName": "surl",
        "methodName": "parseUrl"
      }, {
        "propName": "stitle",
        "methodName": "parseTitle"
      }, {
        "propName": "stext",
        "methodName": "parseText"
      }];
  }
}
