import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';

const jeepPhotoShareCss = ":host{display:block;--share-background-color:#000;--share-width:100vw;--share-height:100vh;--share-top:0px;--share-left:0px}.share-container{position:absolute;top:0;bottom:0;right:0;left:0;background-color:var(--zoom-background-color)}.wrapper{padding:0;margin:0;position:relative;width:100%;height:100%}";

const JeepPhotoShare = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.onPhotoShareCompleted = createEvent(this, "jeepPhotoShareCompleted", 7);
    this.surl = null;
    this.stitle = null;
    this.stext = null;
    this.innerUrl = undefined;
    this.innerTitle = undefined;
    this.innerText = undefined;
  }
  //*****************************
  //* Watch on Property Changes *
  //*****************************
  parseUrl(newValue) {
    this.innerUrl = newValue;
  }
  parseTitle(newValue) {
    this.innerTitle = newValue;
  }
  parseText(newValue) {
    this.innerText = newValue;
  }
  //**********************
  //* Method Definitions *
  //**********************
  /**
   * Method initialize
   */
  async init() {
    return await this._init();
  }
  /**
   * Set the Share.
   */
  setShare() {
    return Promise.resolve(this._setShare());
  }
  //*******************************
  //* Component Lifecycle Methods *
  //*******************************
  async componentWillLoad() {
    this._window = window;
    await this.init();
  }
  async componentDidLoad() {
    await this.setShare();
  }
  //******************************
  //* Private Method Definitions *
  //******************************
  async _init() {
    this._element = this.el.shadowRoot;
    this.parseUrl(this.surl ? this.surl : null);
    this.parseTitle(this.stitle ? this.stitle : null);
    this.parseText(this.stext ? this.stext : null);
    return;
  }
  async _setShare() {
    if (navigator.share) {
      navigator.share({
        title: this.innerTitle,
        url: this.innerUrl,
        text: this.innerText
      })
        .then(() => {
        this.onPhotoShareCompleted.emit({ result: true });
      })
        .catch((error) => {
        this.onPhotoShareCompleted.emit({ result: false, message: error });
      });
    }
    else {
      const msg = "Share not implemented on this browser";
      this.onPhotoShareCompleted.emit({ result: false, message: msg });
    }
  }
  //*************************
  //* Rendering JSX Element *
  //*************************
  render() {
    return (h(Host, null));
  }
  get el() { return this; }
  static get watchers() { return {
    "surl": ["parseUrl"],
    "stitle": ["parseTitle"],
    "stext": ["parseText"]
  }; }
  static get style() { return jeepPhotoShareCss; }
}, [1, "jeep-photo-share", {
    "surl": [513],
    "stitle": [513],
    "stext": [513],
    "innerUrl": [32],
    "innerTitle": [32],
    "innerText": [32],
    "init": [64],
    "setShare": [64]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["jeep-photo-share"];
  components.forEach(tagName => { switch (tagName) {
    case "jeep-photo-share":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, JeepPhotoShare);
      }
      break;
  } });
}

export { JeepPhotoShare as J, defineCustomElement as d };
